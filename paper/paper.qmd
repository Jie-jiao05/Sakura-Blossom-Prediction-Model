---
title: "Sakura Blossom Prediction Model for Japan"
subtitle: "Forecasting Sakura Blossom Using Bayesian Spline Regression"
author: 
  - Shanjie Jiao
thanks: "Code and data are available at: https://github.com/Jie-jiao05/Sakura-Blossom-Prediction-Model."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
toc: true
number-sections: true
bibliography: references.bib

---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(dplyr)
library(here)
library(readr)
library(lubridate)
library(rvest)
library(palmerpenguins)
library(maps)
library(ggplot2)
library(knitr)
library(arrow)
library(rstanarm)


# Define paths to data and model
analysis_modern_sakura_data <- here("data", "02-analysis_data", "analysis_modern_sakura_data.parquet")
temperature_data <- here("data", "02-analysis_data", "temperature_data.csv")

# Load the data
sakura_data <- read_parquet(analysis_modern_sakura_data)  # Load Parquet data
tem_data <- read_csv(temperature_data)                    # Load CSV data

# Load the pre-trained Bayesian hierarchical model
flower_model <- readRDS(here::here("models", "bayesian_hierarchical_model.rds"))
# Load the train dataset
train <- read_parquet(here::here("data","03-model_data", "train_data.parquet"))
test <- read_parquet(here::here("data", "03-model_data","test_data.parquet"))


```


# Introduction

Sakura not merely a ornamental plants but also hold profound cultural significance. In Japanese literature, poetry, and art, sakura blossoms carry deep emotional and symbolic meaning, with the aesthetic concept of "mono no aware" being particularly notable. Due to their short blooming period, sakura blossoms are often seen as a metaphor for the impermanence and fleeting beauty of life, evoking deep reflection and appreciation for the essence of existence.

Beyond their cultural significance, sakura blossoms also have a significant positive impact on Japan's economy. "Ohanami"  (sakura blossom viewing) is a traditional celebration of spring that attracts a large number of domestic and international visitors every year during the blooming season from April to May. According to research by Katsuhiro Miyamoto, a professor at Kansai University, the 2024 cherry blossom season is projected to contribute up to ¥1.14 trillion (approximately $7.7 billion) to Japan's economy [@kaneko2024hanami]. This event not only supports the post-pandemic recovery of the tourism sector but also positively impacts related industries such as catering and retail.

Given the importance of sakura blooming times for tourism planning and economic activities, accurately forecasting these dates is essential. This study aims to utilize linear regression and Bayesian spline methods to systematically analyze the effects of temperature and geographical location on sakura blooming times. By developing a predictive model, the study seeks to provide scientific insights for sakura enthusiasts worldwide, as well as for tourism and related industries, facilitating more precise planning of viewing activities and resource allocation. Furthermore, analyzing sakura blossom data can also expore on the impact of global warming on blooming periods."

result part

The structure of this paper is as follows: Section @sec-data details the data sources and the methodologies employed, including data scraping and manipulation techniques. Section @sec-model outlines the development of prediction models, specifically Linear Regression and Bayesian Spline Models, which are further analyzed in Section @sec-result. In Section @sec-dis, the impact of global warming on the sakura blossom period, along with real-life implementation and limitations of the study, will be discussed, providing insights for further improvement.

# Data {#sec-data}

## Overview

We used the statistical programming language R [@citeR] to perform all analyses of the modern and historical sakura blossom data. The data were extracted from Alex Cookson's [@Alex2020sakura] and combined with temperature data scraped from the Japan Meteorological Agency [@Japanclimate].

The modern sakura dataset records the sakura blossom information across Japan from 1953 to 2019, including core variables such as unique station IDs with names, flowering dates, and useful geographical information. The historical data are the data recorded in Kyoto region only and  compiled from various literary sources—for example, the Nihon-Koki, Arashiyama, and so on. 

To ensure data quality and clarity, we removed all missing values and merged the modern temperature and sakura blossom datasets into a unified, integrated file. Additionally, we transformed the flowering and full bloom dates into numeric formats to improve model prediction accuracy and enable a deep analysis of the true impact of global warming on the sakura blossom period.

For performing the analysis, we utilized several R packages. Tidyverse[@citetidyverse], Dplyr[@citedplyr], Here[@citehere], Readr[@citereadr], Lubridate[@citelubridate], Vest[@citervest)] for data cleaning and scraping.

This research is constructed under the guidance of Dr.Rohan Alexander. [@tellingstories]

## Measurement
Our dataset, sourced from Alex Cookson's work [@Alex2020sakura], integrates temperature data scraped from the Japan Meteorological Agency [@Japanclimate]. The merged dataset contains 5,387 observations, aggregating average temperatures for the corresponding regions and flowering months. @fig-sample It includes detailed records on flowering dates, full bloom dates, and geographic locations. By compiling flowering times and geographic information for sakura blossoms across Japan since 1953 to 2019, this dataset provides comprehensive foundational data for studying the timing patterns and potential influencing factors of sakura blossom flowering.

```{r}
#| label: fig-sample   # for citation
#| fig-cap: Sample of Modern Sakura Data  #name of picture
#| echo: false
#| warning: false
#| message: false
#| 

sakura_sample <- sakura_data %>%
  distinct(station_name, .keep_all = TRUE) %>% # Keep only unique station names
  select(
    station_id,
    station_name,
    lat = latitude,
    lon = longitude,
    year,
    month,
    flower_day = flower_day_in_numeric,
    full_bloom_day = full_bloom_day_in_numeric,
    mean_temp = month_mean_temp
  ) %>%
  head() # Show only the first few rows

# Display the sample as a clean table
kable(sakura_sample, 
      col.names = c("ID", "Location", "Latitude", "Longitude","Year","Month",
                    "Flower Day", "Full Bloom Day", " Mean Temp"))
```

For historical sakura data, since the earliest data in this dataset can be traced back to 812, however the accuracy of temperature measurements in the early years is questionable, and data being recorded only in the Kyoto area, there may be some unavoidable bias. Therefore, when building the prediction model, we will only use modern sakura data for fitting, and historical data will only serve as a comparison to help us understand the historical situation.

The outcome variable in this study represents the flowering time of sakura blossoms. As part of the data refinement process, to enhance the reliability of the predictions, we converted the flowering and full bloom dates from the standard "yyyy-mm-dd" format into numerical values, enabling a more precise model fit. Additionally, since the dataset only includes sakura blossom data in Japan, the conclusions drawn from this study are limited to providing a reference for the flowering times of sakura blossoms within Japan and do not consider the influence of different varieties of sakura.

Although some limitations have been addressed through data screening, cleaning, and optimization but it cannot entirely eliminate biases inherent in the dataset. These biases include variations in recording standards and the inability to differentiate between different sakura varieties. Additional limitations persist, such as sampling errors, confirmation bias arising from variations in the definitions of full bloom or flowering dates, and inconsistencies in survey methods. Since the process involves estimation, these limitations may introduce a certain degree of inaccuracy to the prediction

## Outcome variables

The main outcome variables in this study are the "flowering day" and "full bloom day," which represent the specific dates (converted into numeric form) when sakura enter the flowering and full bloom stages, respectively. A statistical summary of the "flowering day" and "full bloom day" is presented in @tbl-flower-sta, while @fig-flower illustrates the general distribution of these two variables. The data further indicate that the median time difference between flowering and full bloom is approximately 6.22 days. Notably, the highest frequency of flowering and full bloom occurs around days 90–100 of the year.

```{r}
#| label: tbl-flower-sta   # For citation in Quarto
#| tbl-cap: "Statistic Summary of Flowering and Full Blossom Day"  # Caption for the table
#| echo: false  # Suppress code in output
#| warning: false 
#| message: false

# Generate the summary for flowering day
flowering_day_summary <- summary(sakura_data$flower_day_in_numeric)
flowering_day_summary_df <- data.frame(
  Statistic = names(flowering_day_summary),
  `Flowering Day` = as.numeric(flowering_day_summary)
)

# Generate the summary for full bloom day
full_bloom_day_summary <- summary(sakura_data$full_bloom_day_in_numeric)
full_bloom_day_summary_df <- data.frame(
  Statistic = names(full_bloom_day_summary),
  `Full Bloom Day` = as.numeric(full_bloom_day_summary)
)

# Combine the two tables vertically
combined_summary_df <- merge(
  flowering_day_summary_df,
  full_bloom_day_summary_df,
  by = "Statistic",
  all = TRUE
)

# Display the combined summary table
kable(
  combined_summary_df,
  caption = ""
)

```

```{r}
#| label: fig-flower   # For citation in Quarto
#| fig-cap: "Distribution of Flowering and Full Blossom Day"  # Caption for the figure
#| echo: false  

# Load required library
library(ggplot2)
library(patchwork)

# Generate the histogram for Flowering Day
flowering_day_plot <- ggplot(sakura_data, aes(x = flower_day_in_numeric)) +
  geom_histogram(binwidth = 5, fill = "pink", color = "white") +
  labs(
    title = "Distribution of Flowering Day",
    x = "Flowering Day (Numeric)",
    y = "Frequency"
  ) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))

# Generate the histogram for Full Bloom Day
full_bloom_day_plot <- ggplot(sakura_data, aes(x = full_bloom_day_in_numeric)) +
  geom_histogram(binwidth = 5, fill = "#D8BFD8", color = "white", alpha = 0.9) +
  labs(
    title = "Distribution of Full Bloom Day",
    x = "Full Bloom Day (Numeric)",
    y = "Frequency"
  ) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))

# Combine the two plots horizontally
combined_plot <- flowering_day_plot + full_bloom_day_plot

# Print the combined plot
print(combined_plot)
```


## Predictor variables

In this study, sakura blooming dates are influenced by multiple environmental and geographical factors, leading to the selection of several key predictor variables for analysis. 

### Average Temperature of the Flowering Month
The first variable is the average temperature of the flowering month (month_mean_temp). As Dr. Casper J. van der Kooi, Peter G. Kevan, and Matthew H. Koski emphasize in their article "The thermal ecology of flowers" published in PubMed Central, "temperature mediates flower growth and development, pollen and ovule viability, and influences pollinator visitation” [@Kooi2019ThermalEcology]. Since temperature directly affects plant physiological processes and ecological interactions, it is considered one of the most critical predictors in this study. 

### Geographical Information (Latitude and Longitude)
The second variable is geographical information, including latitude and longitude, which provides precise spatial details about the recording locations in different regions. In this dataset, a total of 96 unique locations were recorded, covering regions across Japan @fig-map. Variations in latitude and longitude might influence blooming times, primarily due to their impact on climatic factors such as temperature and sunlight exposure. 

```{r}
#| label: fig-map   # For citation in Quarto
#| tbl-cap: "Recorded Geographical Information"  # Caption for the table
#| echo: false  # Suppress code in output
#| warning: false 
#| message: false
#| fig-align: center
#| 
# Subset world map to Japan
japan_map <- map_data("world") %>% 
  filter(region == "Japan")

# Plot the static map
ggplot() +
  geom_polygon(data = japan_map, aes(x = long, y = lat, group = group),
               fill = "gray90", color = "gray50") +  # Map outline
  geom_point(data = sakura_data, aes(x = longitude, y = latitude), 
             color = "pink", size = 1.5, alpha = 0.7) +  # Data points
  coord_fixed(xlim = c(122, 153), ylim = c(24, 46)) +  # Zoom in to Japan
  theme_minimal() +
  labs(
    title = "Sakura Observation Locations",
    x = "",
    y = ""
  ) +
  theme(
    plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
    axis.text = element_blank(),
    axis.ticks = element_blank(),
    panel.grid = element_blank()
  )

```

### Years under Global Warming
Lastly, considering the trend of global climate warming in recent decades, the variable "year" is also included. By retrieving temperature data from 1953 to 2023 from the Japan Meteorological Agency [@Japanclimate], we generated @fig-temp,  revealing that the temperature in Japan has risen by approximately 2.73 degrees Celsius compared to 1953. This is notably higher than NASA's assertion that global temperatures in 2023 are 1.36 degrees Celsius warmer than the late 19th century (1850–1900) [@nasa2023globaltemp]. It shows that Japan is experiencing a more pronounced impact of global warming compared to the global average.

```{r}
#| label: fig-temp   # For citation in Quarto
#| tbl-cap: "Change in Average Temperature Over Years with Trend Line"  # Caption for the table
#| echo: false  # Suppress code in output
#| warning: false 
#| message: false
#### Data Preparation ####
# Calculate yearly average temperature
yearly_avg_temp <- tem_data %>%
  group_by(year) %>%
  summarize(mean_temp_c = mean(mean_temp_c, na.rm = TRUE), .groups = "drop")  # Handle missing values

# Generate the plot with less specific year axis and a fitted line
ggplot(yearly_avg_temp, aes(x = year, y = mean_temp_c)) +
  geom_line(color = "#0072B2", size = 1) +    # Line plot with blue color
  geom_point(color = "#CC79A7", size = 2) +   # Points with pink color
  geom_smooth(method = "lm", color = "#000000", linetype = "dashed", se = FALSE, size = 1) + # Linear fit
  scale_x_continuous(
    breaks = seq(min(yearly_avg_temp$year), max(yearly_avg_temp$year), by = 10), # Set ticks every 10 years
    labels = scales::number_format(accuracy = 1) # Ensure clean formatting for labels
  ) +
  labs(
    title = "Change in Average Temperature Over Years with Trend Line",
    x = "Year",
    y = "Mean Temperature (°C)"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16),
    axis.title = element_text(size = 14),
    axis.text = element_text(size = 12)
  )

#temp_change <- yearly_avg_temp %>%
#  arrange(year) %>%  # Ensure the data is ordered by year
#  summarize(
#    first_year = first(year),
#    last_year = last(year),
#    temp_first_year = first(mean_temp_c),
#    temp_last_year = last(mean_temp_c),
#    absolute_change = temp_last_year - temp_first_year,  # Absolute change
#    annual_rate_of_change = absolute_change / (last_year - first_year)  # Annual rate of change
#  )

# Print the results
#temp_change

```

## Correlation between Predictor Variables

### Latitude and Longitude with Temperature
@fig-cor demonstrates how temperatures vary across different locations based on their geographical coordinates. A positive relation could be observed, with lower temperatures observed at higher latitudes, such as in northern Japan, and gradually increasing temperatures as the coordinates approach regions closer to the equator.
```{r}
#| label: fig-cor   # For citation in Quarto
#| tbl-cap: "Temperature Variation with Latitude and Longitude"  # Caption for the table
#| echo: false  # Suppress code in output
#| warning: false 
#| message: false
#| fig-align: center
#| 
# Create a 2D scatter plot with color indicating temperature
ggplot(sakura_data, aes(x = latitude, y = longitude, color = month_mean_temp)) +
  geom_point(size = 3) +
  scale_color_gradient(low = "blue", high = "red") +
  labs(
    title = "Temperature Variation with Latitude and Longitude",
    x = "Latitude",
    y = "Longitude",
    color = "Mean Temp (°C)"
  ) +
  theme_minimal()
```


# Model

The goal of our modeling is to predict the precise timing of sakura blooming and full blooming across different regions of Japan each year. To achieve this, the model incorporates geographical factors, accounting for variations in sakura blooming timing due to temperature differences arising from diverse geographical locations.

Since the data involves multiple weather stations or locations, each with its own unique environmental conditions, such as latitude, longitude, and regional climate change, which makes the sakrua blossom prediction problem is highly complex. Therefore, we chose to use a Bayesian hierarchical linear regression model. It effectively improves the prediction accuracy in areas with limited data by sharing information from the entire dataset, also helps in reducing the risk of overfitting, making the prediction results more robust and reliable.

Background details and diagnostics are included in [Appendix -@sec-model-details].

## Model set-up
This study uses a Bayesian Hierarchical Linear Regression model to analyze the relationship between sakura flowering dates and various predictors, implemented using the stan_glmer function from the rstanarm package @rstanarm in R [@citeR] and use the default priors from `rstanarm`. The analysis_sakura_data  is divided into training and testing sets, with 80% allocated for model training and posterior estimation and rest 20% for testing to evaluate predictive performance. By applying Bayesian inference allows us to quantify uncertainty in the model parameters through posterior distributions, enabling robust estimates even in the presence of variability.


###  Bayesian Hierarchical Linear Regression Model

```{=latex}
\begin{align}  
y_i | \mu_i, \sigma &\sim \text{Normal}(\mu_i, \sigma) \\
\mu_i &= \beta_0 + \beta_1 \cdot \text{month\_mean\_temperature}_i + \beta_2 \cdot \text{latitude}_i \nonumber \\
&\quad + \beta_3 \cdot \text{longitude}_i + \gamma_{\text{region}(i)} + \delta_{\text{year}(i)} \\
\gamma_{\text{region}} &\sim \text{Normal}(0, \sigma_{\gamma}) \\
\delta_{\text{year}} &\sim \text{Normal}(0, \sigma_{\delta}) \\
\beta_0, \beta_1, \beta_2, \beta_3 &\sim \text{Normal}(0, 10) \\
\sigma, \sigma_{\gamma}, \sigma_{\delta} &\sim \text{Exponential}(1)
\end{align}


```

### Model justification

This model captures the variability in flowering days arising from geographic and climatic differences by incorporating both fixed effects, such as temperature, latitude, and longitude, and random effects for regions and climates. The hierarchical structure enables the modeling of regional and climate-specific variability, creating a robust framework to account for heterogeneity in the data. This approach helps in improving the model’s robustness and ensures more accurate predictions across diverse environmental conditions.

In this model, random effects are included to account for group-level variability at cross regions and year levels. Region-specific random effects (\(\gamma_{\text{region}}\)) capture local environmental differences, such as microclimates or soil conditions, allowing the model to adjust predictions for region with consistently earlier or later flowering patterns. Similarly, year-specific random effects (\(\delta_{\text{year}}\)) account for deviations in flowering dates caused by year-to-year climatic anomalies, such as warmer winters or extreme weather events. These random effects are modeled as zero-centered normal distributions with variances (\(\sigma_{\gamma}\) and \(\sigma_{\delta}\)) that reflect the variability among regions and years. By incorporating random effects, the model accommodates unobserved heterogeneity, will improves prediction accuracy, and realistically captures the hierarchical structure of the data.

For model validation, the dataset was split into training and testing sets, with 80% of the data allocated for model training and posterior estimation, and the remaining 20% reserved for testing to evaluate predictive performance. An overview of the training and testing datasets is presented in @fig-view, providing a summary of the data The model's accuracy was assessed using the Root Mean Squared Error (RMSE)

```{r}
#| label: fig-view  # For citation in Quarto
#| tbl-cap: "Training and Testing Data Evaluation Results"  # Caption for the table
#| echo: false  # Suppress code in output
#| warning: false 
#| message: false
#| fig-align: center

# Calculate summary statistics
test_summary <- data.frame(
  Statistic = c("Unique Stations", "Mean Flower Time", "Mean Temperature", "Mean Full Blossom"),
  Value = c(
    length(unique(test$station_id)),
    mean(test$flower_day_in_numeric, na.rm = TRUE),
    mean(test$month_mean_temp, na.rm = TRUE),
    mean(test$full_bloom_day_in_numeric, na.rm = TRUE)
  ),
  Dataset = "Test Data"
)

train_summary <- data.frame(
  Statistic = c("Unique Stations", "Mean Flower Time", "Mean Temperature", "Mean Full Blossom"),
  Value = c(
    length(unique(train$station_id)),
    mean(train$flower_day_in_numeric, na.rm = TRUE),
    mean(train$month_mean_temp, na.rm = TRUE),
    mean(train$full_bloom_day_in_numeric, na.rm = TRUE)
  ),
  Dataset = "Train Data"
)

# Combine summaries
summary_data <- rbind(test_summary, train_summary)

# Create sakura-themed visualization with transparency
ggplot(summary_data, aes(x = Statistic, y = Value, fill = Dataset)) +
  geom_bar(stat = "identity", position = "dodge", width = 0.7, alpha = 0.7) + # Add transparency with alpha
  geom_text(
    aes(label = round(Value, 1)), 
    position = position_dodge(width = 0.7), 
    vjust = -0.2, 
    size = 2.5,
    color = "black"
  ) +
  scale_fill_manual(
    values = c("Test Data" = rgb(255, 193, 204, maxColorValue = 255, alpha = 180),  # Sakura pink with transparency
               "Train Data" = rgb(163, 214, 167, maxColorValue = 255, alpha = 180)) # Soft green with transparency
  ) +
  labs(
    title = "Comparison of Train and Test Data",
    x = "Statistic",
    y = "Value"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 16, color = "#6A1B9A"),
    plot.subtitle = element_text(hjust = 0.5, size = 12, color = "#6A1B9A"),
    axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
    legend.title = element_blank(),
    legend.position = "top"
  )
```

# Result

## Result of the Prediction Model

### Model Performance Evaluation

The model’s performance was evaluated using Root Mean Squared Error (RMSE), Mean Absolute Error (MAE), and \(R^2\), providing a comprehensive assessment of accuracy and explanatory power. The RMSE was 3.101 for the training set and 3.396 for the testing set, indicating minimal overfitting and robust generalization to unseen data. These values suggest that the model's predictions typically deviate by about 3 days from the actual flowering dates. Similarly, the MAE values of 2.363 (training) and 2.586 (testing) highlight the model’s precision. The high \(R^2\) values, 0.965 for training and 0.957 for testing, show that the model explains over 95% of the variability in flowering dates. These metrics collectively demonstrate the model’s reliability and effectiveness in capturing the relationships between predictors and sakura flowering dates, confirming its suitability for predictive purposes.

```{r}
#| label: tbl-rmse  # For citation in Quarto
#| tbl-cap: "Training and Testing Data Evaluation Results"  # Caption for the table
#| echo: false  # Suppress code in output
#| warning: false 
#| message: false
#| fig-align: center
# === Step 3: Generate Predictions ===
# Training predictions
train_predictions <- posterior_predict(flower_model)
train$predicted_flower_day <- colMeans(train_predictions)

# Testing predictions
test_predictions <- posterior_predict(flower_model, newdata = test)
test$predicted_flower_day <- colMeans(test_predictions)

# === Step 4: Define Metrics Calculation Function ===
# Define a function to calculate RMSE, MAE, and R^2
calculate_metrics <- function(actual, predicted) {
  rmse <- sqrt(mean((actual - predicted)^2))  # Root Mean Squared Error
  mae <- mean(abs(actual - predicted))       # Mean Absolute Error
  r_squared <- 1 - (sum((actual - predicted)^2) / sum((actual - mean(actual))^2))  # R^2
  return(c(RMSE = rmse, MAE = mae, R2 = r_squared))
}

# === Step 5: Evaluate the Model ===
# Calculate metrics for training data
train_metrics <- calculate_metrics(train$flower_day_in_numeric, train$predicted_flower_day)

# Calculate metrics for testing data
test_metrics <- calculate_metrics(test$flower_day_in_numeric, test$predicted_flower_day)

# Combine metrics into a table
metrics_table <- data.frame(
  Metric = c("RMSE", "MAE", "R^2"),
  Training = train_metrics,
  Testing = test_metrics
)

# === Step 6: Display Evaluation Metrics Table ===
kable(
  metrics_table,
  digits = 3,
  caption = "Training and Testing Data Evaluation Results",
  booktabs = TRUE
)


```

### Fixed Effects Coefficients with 95% Credible Intervals

The @fig-fix highlights the relationships between key predictors and sakura flowering dates based on the Bayesian hierarchical model. The intercept (\(-47.4751\)) represents the expected flowering date when all predictors are zero, though it’s mainly a baseline without much practical interpretation since predictors like temperature and location are scaled.

Monthly mean temperature has a clear and significant effect. For every 1°C increase, the flowering date is delayed by about 0.33 days, with a credible interval (\([0.2599, 0.4017]\)) that excludes zero. Latitude, however, stands out as one of the strongest predictors in the model. With a coefficient of \(4.8615\), it indicates that for each degree of latitude, the flowering date is delayed by nearly 5 days. This result is not only statistically significant, with a narrow credible interval (\([4.4334, 5.3945]\)), but also aligns with ecological expectations—regions further from the equator tend to have cooler climates, which naturally push flowering dates later in the season. Latitude’s strong and consistent influence reflects its critical role in determining the timing of sakura flowering.

Longitude, in contrast, has a much smaller and less certain effect. The coefficient (\(-0.2695\)) suggests that flowering may occur earlier as longitude increases, but the credible interval (\([-0.7217, 0.1194]\)) includes zero. This uncertainty means longitude’s impact is less clear, and it likely plays a minor role compared to temperature and latitude.

```{r}
#| label: fig-fix   # For citation in Quarto
#| tbl-cap: "Fixed Effects Coefficients with 95% Credible Intervals"  # Caption for the table
#| echo: false  # Suppress code in output
#| warning: false 
#| message: false
#| fig-align: center
# Extract fixed effects coefficients and standard errors
fixed_effects <- flower_model$coefficients[1:4]  # Extract only the first 4 fixed effects
fixed_se <- flower_model$ses[1:4]  # Extract standard errors for fixed effects

# Calculate credible intervals for fixed effects only
credible_intervals <- posterior_interval(flower_model, pars = names(fixed_effects), prob = 0.95)

# Combine results into a table
fixed_effects_table <- data.frame(
  Parameter = names(fixed_effects),
  Estimate = fixed_effects,
  Std_Error = fixed_se,
  `2.5%` = credible_intervals[, 1],
  `97.5%` = credible_intervals[, 2]
)

# Display the table in a formatted manner
library(knitr)
kable(
  fixed_effects_table,
  digits = 4,
  caption = "Fixed Effects Coefficients with 95% Credible Intervals"
)



```

### Performance Metrics for Random Effects (Year and Region)

The random effects for year and region play a critical role in capturing temporal and spatial variability in sakura flowering dates and are shown in @tbl-ram . The Root Mean Squared Error (RMSE) of **4.282** shows that, on average, flowering dates deviate by approximately 4.3 days due to differences between years and regions. This highlights the substantial adjustments made by the random effects to account for annual climate trends and regional environmental factors. Similarly, the Mean Absolute Error (MAE) of **3.186** indicates that typical adjustments are around 3.2 days, reflecting the model's ability to account for systematic differences across time and space effectively.

The variance explained by the random effects (\(R^2 = 1.000\)) demonstrates that the model perfectly partitions the variability attributed to year and region. Year-based random effects capture temporal patterns, such as global warming or specific climate anomalies, ensuring that flowering trends align with observed climate changes. Region-based random effects, on the other hand, account for spatial heterogeneity influenced by geographic and environmental differences, such as latitude and local climate conditions. Together, these random effects ensure that the model accurately reflects both temporal and spatial dynamics.


```{r}
#| label: tbl-ram   # For citation in Quarto
#| tbl-cap: "Performance Metrics for Random Effects"  # Caption for the table
#| echo: false  # Suppress code in output
#| warning: false 
#| message: false
#| fig-align: center
# === Step 1: Extract Random Effects ===
# Extract station-level and year-level random effects
random_effects <- ranef(flower_model, condVar = TRUE)

# Station-level random effects
station_random_effects <- as.data.frame(random_effects$station_name)
station_random_effects$Station <- rownames(station_random_effects)

# Year-level random effects
year_random_effects <- as.data.frame(random_effects$year)
year_random_effects$Year <- rownames(year_random_effects)

# Combine into a single data frame for evaluation
combined_random_effects <- bind_rows(
  station_random_effects %>% rename(ID = Station),
  year_random_effects %>% rename(ID = Year)
)

# Rename columns for clarity
colnames(combined_random_effects) <- c("Estimate", "ID")

# === Step 2: Calculate Metrics ===
# RMSE for random effects
rmse_random <- sqrt(mean(combined_random_effects$Estimate^2))

# MAE for random effects
mae_random <- mean(abs(combined_random_effects$Estimate))

# Variance Explained (R^2)
variance_random_effects <- var(combined_random_effects$Estimate)
total_variance <- sum(variance_random_effects)  # Assume total variance = variance of random effects
r_squared_random <- variance_random_effects / total_variance

# Ensure all metrics have valid values
r_squared_random <- ifelse(is.nan(r_squared_random), 0, r_squared_random)  # Handle NaN cases

# === Step 3: Display Results ===
random_effects_metrics <- data.frame(
  Metric = c("RMSE", "MAE", "Variance Explained (R^2)"),
  Value = c(rmse_random, mae_random, r_squared_random)
)

# Print the table
library(knitr)
kable(
  random_effects_metrics,
  digits = 3,
  caption = "Performance Metrics for Random Effects",
  booktabs = TRUE
)


```


```{r}
#| label: fig-obs   # For citation in Quarto
#| tbl-cap: "Testing Data: Observed vs Predicted Flowering Days"  # Caption for the table
#| echo: false  # Suppress code in output
#| warning: false 
#| message: false
#| fig-align: center
# === Step 7: Visualize Results (Optional) ===
# Scatter plot: Observed vs. Predicted (Training Data)
ggplot(train, aes(x = flower_day_in_numeric, y = predicted_flower_day)) +
  geom_point(color = "blue", alpha = 0.7) +
  geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
  labs(
    x = "Observed Flowering Day (Train)",
    y = "Predicted Flowering Day (Train)",
    title = "Training Data: Observed vs Predicted Flowering Days"
  ) +
  theme_minimal()

# Scatter plot: Observed vs. Predicted (Testing Data)
ggplot(test, aes(x = flower_day_in_numeric, y = predicted_flower_day)) +
  geom_point(color = "green", alpha = 0.7) +
  geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
  labs(
    x = "Observed Flowering Day (Test)",
    y = "Predicted Flowering Day (Test)",
    title = "Testing Data: Observed vs Predicted Flowering Days"
  ) +
  theme_minimal()
```

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false

#library(rstanarm)
#library(modelsummary)

#first_model <-
#  readRDS(file = here::here("models/first_model.rds"))
```

```{r}
#| echo: false
#| eval: true
#| label: tbl-modelresults
#| tbl-cap: "Explanatory models of flight time based on wing width and wing length"
#| warning: false

#modelsummary::modelsummary(
#  list(
#    "First model" = first_model
#  ),
#  statistic = "mad",
#  fmt = 2
#)
```




# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

Please don't use these as sub-heading labels - change them to be what your point actually is.

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows... 

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]

#pp_check(first_model) +
#  theme_classic() +
#  theme(legend.position = "bottom")

#posterior_vs_prior(first_model) +
#  theme_minimal() +
#  scale_color_brewer(palette = "Set1") +
#  theme(legend.position = "bottom") +
#  coord_flip()
```

## Diagnostics

@fig-stanareyouokay-1 is a trace plot. It shows... This suggests...

@fig-stanareyouokay-2 is a Rhat plot. It shows... This suggests...

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2

#plot(first_model, "trace")

#plot(first_model, "rhat")
```



\newpage


# References


